{"version":3,"sources":["components/SearchBar.js","components/ResultsContainer.js","components/NominationsContainer.js","components/Banner.js","App.js","index.js"],"names":["SearchBar","queryTerm","term","className","onSubmit","e","preventDefault","htmlFor","type","id","name","value","placeholder","onChange","target","ResultsContainer","results","addNomination","nominations","isLoading","length","map","movie","Title","Year","onClick","imdbID","NominationsContainer","removeNomination","Object","keys","movieId","Banner","App","useState","JSON","parse","localStorage","getItem","setNominations","setResults","setTerm","setLoading","searchTerm","a","fetch","process","response","json","data","useEffect","setItem","stringify","enumerable","nominationId","newNominations","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d931a12.chunk.js","sourcesContent":["import React from 'react';\n\n/**\n * Live search bar component that queries OMDB on input change\n * @param {function} queryTerm - function that queries the term\n * @param {string} term - search term in input box\n */\nconst SearchBar = ({queryTerm, term}) => {\n\n  return (\n    <section className=\"card search-bar\">\n      <form onSubmit={(e) => e.preventDefault()}>\n        <label htmlFor=\"search-term\">Movie title</label>\n        <div className=\"search-bar__container\">\n          <button type=\"submit\" className=\"search-bar__submit\"></button>\n          <input\n            id=\"search-term\"\n            name=\"search-term\"\n            value={term}\n            type=\"text\"\n            className=\"search-bar__input\"\n            placeholder=\"Please enter a title\"\n            onChange={e => queryTerm(e.target.value)}\n          />\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default SearchBar;","import React from 'react';\n\n/**\n * \n * Search results component\n * Displays list of movies\n * @param {array} results\n * @param {string} term\n * @param {function} changeNomination\n * \n */\nconst ResultsContainer = ({ results, term, addNomination, nominations, isLoading}) => {\n  return (\n    <section className=\"card results\">\n      <h2 className=\"card__title\">{term.length > 0 ? `Results for \"${term}\"`: \" Search Results\"}</h2>\n      {\n        isLoading ? <div className=\"spinner\"></div> : null\n      }\n      <ul className=\"card__list\">\n        {\n          results.map((movie) => (\n            <li className=\"card__list-item\" key={movie.imdbID}>{`${movie.Title} (${movie.Year})`}\n              <button \n                onClick={() => addNomination(movie)}\n                className={movie.imdbID in nominations ? \"disabled\" : \"\"}\n              >\n                  Nominate\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  );\n};\n\nexport default ResultsContainer;","import React from 'react';\n\n/**\n * Nominations component\n * contains list of nominated movies\n * @param {array} results\n * @param {string} term\n * @param {function} changeNomination\n *s\n */\nconst NominationsContainer = ({ nominations, removeNomination }) => {\n  return (\n    <section className=\"card nominations\">\n      <h2>Nominations</h2>\n      <ul className=\"card__list\">\n        {\n          Object.keys(nominations).map((movieId) => (\n            <li className=\"card__list-item\" key={movieId}>{`${nominations[movieId].Title} (${nominations[movieId].Year})`}\n              <button onClick={() => removeNomination(movieId)}>Remove</button>\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  );\n};\n\nexport default NominationsContainer;","import React from 'react';\n\n/**\n * Banner Component that displays when there are 5 nominations\n * @param {Object} nominations\n */\nconst Banner = ({ nominations }) => {\n  if(Object.keys(nominations).length >= 5){\n    return (\n      <section className=\"card banner\">\n        <p>5 Nominations have been made!</p>\n      </section>\n    );\n  } else {\n    return null;\n  }\n\n};\n\nexport default Banner;","import React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport ResultsContainer from './components/ResultsContainer';\nimport NominationsContainer from './components/NominationsContainer';\n\nimport './App.scss';\nimport Banner from './components/Banner';\n\n\nconst App = () => {\n  const [nominations, setNominations] = useState(\n    JSON.parse(localStorage.getItem('nominations')) || {}\n  );\n  const [results, setResults] = useState([]);\n  const [term, setTerm] = useState('');\n  const [isLoading, setLoading] = useState(false);\n\n  /**\n   * Queries the term entered in the search bar\n   * @param {string} searchTerm \n   */\n  const queryTerm = async (searchTerm) => {\n    setTerm(searchTerm);\n    // only search if an input exists\n    if(searchTerm.length > 0) {\n      setLoading(true);\n      const response = await fetch(`http://www.omdbapi.com/?s=${term}&apikey=${process.env.REACT_APP_OMDB_API_KEY}&type=movie&page=1`);\n      const data = await response.json();\n      setLoading(false);\n      if(data[\"Response\"] === \"True\") {\n        setResults(data[\"Search\"]);\n      }\n\n    }\n  }\n  \n  /**\n   * Adds a movie to the nominations list\n   * @param {Object} nomination \n   */\n  const addNomination = (movie) => {\n    // check if nomination exists in the nomination list first\n    if (!(movie.imdbID in nominations)) {\n      setNominations({ \n        ...nominations,\n        [movie.imdbID]: {...movie, enumerable: true }\n      });\n    }\n  }\n\n  /**\n   * removes a movie from the nomination list based on movieId \n   * @param {string} nominationId \n   */\n  const removeNomination = (nominationId) => {\n    let newNominations = nominations;\n    delete newNominations[nominationId];\n    setNominations({...newNominations});\n  }\n\n  // Save nominations to local storage everytime its updated\n  useEffect(() => {\n    localStorage.setItem('nominations', JSON.stringify(nominations));\n  }, [nominations]);\n\n  return (\n    <main className=\"container\">\n      \n      <Banner nominations={nominations}/>\n      <h1>The Shoppies</h1>\n      <SearchBar\n        queryTerm={queryTerm}\n        term={term}\n      />\n      <ResultsContainer\n        results={results}\n        term={term}\n        addNomination={addNomination}\n        nominations={nominations}\n        isLoading={isLoading}\n      />\n      <NominationsContainer\n        nominations={nominations}\n        removeNomination={removeNomination}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}